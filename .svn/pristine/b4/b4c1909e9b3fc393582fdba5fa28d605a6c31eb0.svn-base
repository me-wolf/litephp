YSL.use('widget.Animate', function(Y, Ani){
	var BIND_KEY = 'data-arbinded',
		MIN_KEY = 'min-height',
		BUFFER_OFFSET = 5;

	var createHelper = function(n, id){
		var _n = n.getDomNode();
		var fk = _n.cloneNode();
		_n.parentNode.insertBefore(fk, _n);
		Y.dom.one(fk).setStyle({height:0, overflowY:'hidden', position:'absolute', visibility:'hidden', top:0});
		fk.id = id;
	}

	var getHeight = function(id, val){
		var n = Y.dom.one('#'+id);
		n.setValue(val);
		return n.getDomNode().scrollHeight;
	}

	var getMinHeight = function(txt){
		var minHeight = txt.getAttr(MIN_KEY);
		if(!minHeight){
			minHeight = parseInt(txt.getStyle('min-height'), 10) || parseInt(txt.getStyle('height'), 10);
			txt.setAttr(MIN_KEY, minHeight);
		}
		return minHeight;
	}

	/**
	 * 文本框自动缩放
	 * @param  {DOM} txt
	 */
	var AR = function(txt){
		txt = Y.dom.one(txt);
		var txtNode = txt.getDomNode();

		if(txt.getAttr(BIND_KEY)){
			return;
		}

		var id = Y.guid();
		txt.setAttr(BIND_KEY, id);
		txt.setStyle('overflowY', 'hidden');

		createHelper(txt, id);

		var minHeight = getMinHeight(txt);

		var resize = function(callback){
			console.log('adsfasdf');
			var toHeight = getHeight(id, txt.getValue()) + BUFFER_OFFSET;
			var curHeight = txt.getStyle('height');
			console.log('toHeight', toHeight, 'minHeight',minHeight, 'curHeight', curHeight);
			toHeight = Math.max(toHeight, minHeight);

			txt.setStyle('height', toHeight+'px');
		};
		txt.on('paste', function(){setTimeout(resize, 0);});
		txt.on('keyup', resize);
	};
	Y.widget.textAutoResize = AR;
});