<?php
use LITE\Controller;
use LITE\Hooker;
use LITE\View;
use LITE\Statistics;
use LITE\DB_Query;
use LITE\DB_Record;

class Controller_Base extends Controller {
	public $login_user;

	private $passRules = array(
		'admin/logout',
		'admin/login',
	);

	public function __construct($ctrl=null, $act=null){
		Statistics::instance('ticks')->startTickMark();
		if($ctrl && $act){
			$this->login_user = Model_Access::instance()->getLoginInfo();

			Hooker::add(View::EVENT_AFTER_VIEW_RENDER, function($param){
				$html = str_replace('xx', '权限控制-字符串替换试验', $param->html);
				$param->html = $html;
			});

			View::preAssignVar(array(
				'ENV' => array(
					'login_user' => $this->login_user,
					'controller' => $ctrl,
					'action' => $act
				)
			));

			$user = $this->login_user;
			$GLOBALS['__LOG_INSERTING__'] = false;
			Hooker::add(DB_Record::EVENT_BEFORE_DB_QUERY, function($sql)use($user){
				return;
				if(DB_Query::isWriteOperation($sql) && !$GLOBALS['__LOG_INSERTING__']){
					$admin_id = $user->id;
					$user_name = $user->admin_name;
					$log = array(
						'level' => Model_Log::LEVEL_INFO,
						'file' => 'DB_QUERY',
						'tag' => 'DB_WRITE_'.$admin_id.'_'.$user_name,        //必填
						'content' => $sql,
					);
					$GLOBALS['__LOG_INSERTING__'] = true;
					Model_Log::insertLog($log);
					$GLOBALS['__LOG_INSERTING__'] = false;
				}
			});

			$ctrl = strtolower($ctrl);
			$act = strtolower($act);

			//特别通道
			$access_pass = false;
			foreach($this->passRules as $rule){
				list($c, $a) = explode('/', $rule);
				if($c == '*' || $c == $ctrl){
					if($a == '*' || $a == $act){
						$access_pass  = true;
						break;
					}
				}
			}

			if($access_pass){
				return;
			}

			if(empty($this->login_user)){
				$this->jumpTo('admin/login');
			}

			$message  = '';

			/**
			 * @var Model_AdminRole $role
			 */
			$role = Model_AdminRole::find('id=?',$this->login_user['role_id'])->field('id,allow,deny,default_type,is_del')->cache(120)->one();

			if(!$role){
				$this->showAcesssControlMessage('没有权限访问', 'EMPTY ROLE_ID');
				exit;
			} else if(!$role->checkRuleAllow($ctrl.'/'.$act, $message)){
				$this->showAcesssControlMessage('没有权限访问', $message);
				exit;
			}
		}
	}

	/**
	 * 显示权限控制信息
	 * @param $message
	 * @param string $detail
	 */
	private function showAcesssControlMessage($message, $detail=''){
		$view = new View(array('message'=>$message, 'detail'=>$detail));
		echo $view->render('access_deny.php', true);
	}

	protected function isLogined(){
		return empty($this->login_user);
	}
}